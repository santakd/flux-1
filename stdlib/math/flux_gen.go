// DO NOT EDIT: This file is autogenerated via the builtin command.

package math

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 11,
					Line:   124,
				},
				File:   "math.flux",
				Source: "package math\n\n\n// math.pi = 3.14159265358979323846264338327950288419716939937510582097494459\nbuiltin pi : float\n\n// math.e = 2.71828182845904523536028747135266249775724709369995957496696763\nbuiltin e : float\n\n// math.phi = 1.61803398874989484820458683436563811772030917980576286213544862\nbuiltin phi : float\n\n// math.sqrt2 = 1.41421356237309504880168872420969807856967187537694807317667974\nbuiltin sqrt2 : float\n\n// math.sqrte = 1.64872127070012814684865078781416357165377610071014801157507931\nbuiltin sqrte : float\n\n// math.sqrtpi = 1.77245385090551602729816748334114518279754945612238712821380779\nbuiltin sqrtpi : float\n\n// math.sqrtphi = 1.27201964951406896425242246173749149171560804184009624861664038\nbuiltin sqrtphi : float\n\n// math.ln2 = 0.693147180559945309417232121458176568075500134360255254120680009\nbuiltin ln2 : float\n\n// math.log2e = 1 รท math.ln2\nbuiltin log2e : float\n\n// math.ln10 = 2.30258509299404568401799145468436420760110148862877297603332790\nbuiltin ln10 : float\n\n// math.log10e = 1 รท math.ln10\nbuiltin log10e : float\n\n// math.maxfloat = 1.797693134862315708145274237317043567981e+308\nbuiltin maxfloat : float\n\n// math.smallestNonzeroFloat = 4.940656458412465441765687928682213723651e-324\nbuiltin smallestNonzeroFloat : float\n\n// math.maxint = 1<<63 - 1\nbuiltin maxint : int\n\n// math.minint = -1 << 63\nbuiltin minint : int\n\n// math.maxuint = 1<<64 - 1\nbuiltin maxuint : uint\n\n\n// Abs returns x as a positive value.\n//\n// Example\n//\n//    import \"math\"\n//    math.abs(x: -10.42) // 10.42\nbuiltin abs : (x: float) => float\nbuiltin acos : (x: float) => float\nbuiltin acosh : (x: float) => float\nbuiltin asin : (x: float) => float\nbuiltin asinh : (x: float) => float\nbuiltin atan : (x: float) => float\nbuiltin atan2 : (x: float, y: float) => float\nbuiltin atanh : (x: float) => float\nbuiltin cbrt : (x: float) => float\nbuiltin ceil : (x: float) => float\nbuiltin copysign : (x: float, y: float) => float\nbuiltin cos : (x: float) => float\nbuiltin cosh : (x: float) => float\nbuiltin dim : (x: float, y: float) => float\nbuiltin erf : (x: float) => float\nbuiltin erfc : (x: float) => float\nbuiltin erfcinv : (x: float) => float\nbuiltin erfinv : (x: float) => float\nbuiltin exp : (x: float) => float\nbuiltin exp2 : (x: float) => float\nbuiltin expm1 : (x: float) => float\nbuiltin float64bits : (f: float) => uint\nbuiltin float64frombits : (b: uint) => float\nbuiltin floor : (x: float) => float\nbuiltin frexp : (f: float) => {frac: float, exp: int}\nbuiltin gamma : (x: float) => float\nbuiltin hypot : (x: float) => float\nbuiltin ilogb : (x: float) => float\nbuiltin mInf : (sign: int) => float\nbuiltin isInf : (f: float, sign: int) => bool\nbuiltin isNaN : (f: float) => bool\nbuiltin j0 : (x: float) => float\nbuiltin j1 : (x: float) => float\nbuiltin jn : (n: int, x: float) => float\nbuiltin ldexp : (frac: float, exp: int) => float\nbuiltin lgamma : (x: float) => {lgamma: float, sign: int}\nbuiltin log : (x: float) => float\nbuiltin log10 : (x: float) => float\nbuiltin log1p : (x: float) => float\nbuiltin log2 : (x: float) => float\nbuiltin logb : (x: float) => float\nbuiltin mMax : (x: float, y: float) => float\nbuiltin mMin : (x: float, y: float) => float\nbuiltin mod : (x: float, y: float) => float\nbuiltin modf : (f: float) => {int: float, frac: float}\nbuiltin NaN : () => float\nbuiltin nextafter : (x: float, y: float) => float\nbuiltin pow : (x: float, y: float) => float\nbuiltin pow10 : (n: int) => float\nbuiltin remainder : (x: float, y: float) => float\nbuiltin round : (x: float) => float\nbuiltin roundtoeven : (x: float) => float\nbuiltin signbit : (x: float) => bool\nbuiltin sin : (x: float) => float\nbuiltin sincos : (x: float) => {sin: float, cos: float}\nbuiltin sinh : (x: float) => float\nbuiltin sqrt : (x: float) => float\nbuiltin tan : (x: float) => float\nbuiltin tanh : (x: float) => float\nbuiltin trunc : (x: float) => float\nbuiltin y0 : (x: float) => float\nbuiltin y1 : (x: float) => float\nbuiltin yn",
				Start: ast.Position{
					Column: 1,
					Line:   4,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.pi = 3.14159265358979323846264338327950288419716939937510582097494459\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   8,
					},
					File:   "math.flux",
					Source: "builtin pi",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   8,
						},
						File:   "math.flux",
						Source: "pi",
						Start: ast.Position{
							Column: 9,
							Line:   8,
						},
					},
				},
				Name: "pi",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   8,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 14,
							Line:   8,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   8,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 14,
								Line:   8,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   8,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 14,
									Line:   8,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.e = 2.71828182845904523536028747135266249775724709369995957496696763\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 10,
						Line:   11,
					},
					File:   "math.flux",
					Source: "builtin e",
					Start: ast.Position{
						Column: 1,
						Line:   11,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   11,
						},
						File:   "math.flux",
						Source: "e",
						Start: ast.Position{
							Column: 9,
							Line:   11,
						},
					},
				},
				Name: "e",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   11,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 13,
							Line:   11,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   11,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 13,
								Line:   11,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   11,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 13,
									Line:   11,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.phi = 1.61803398874989484820458683436563811772030917980576286213544862\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   14,
					},
					File:   "math.flux",
					Source: "builtin phi",
					Start: ast.Position{
						Column: 1,
						Line:   14,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   14,
						},
						File:   "math.flux",
						Source: "phi",
						Start: ast.Position{
							Column: 9,
							Line:   14,
						},
					},
				},
				Name: "phi",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   14,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 15,
							Line:   14,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   14,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 15,
								Line:   14,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   14,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 15,
									Line:   14,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.sqrt2 = 1.41421356237309504880168872420969807856967187537694807317667974\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   17,
					},
					File:   "math.flux",
					Source: "builtin sqrt2",
					Start: ast.Position{
						Column: 1,
						Line:   17,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   17,
						},
						File:   "math.flux",
						Source: "sqrt2",
						Start: ast.Position{
							Column: 9,
							Line:   17,
						},
					},
				},
				Name: "sqrt2",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   17,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 17,
							Line:   17,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   17,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 17,
								Line:   17,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   17,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 17,
									Line:   17,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.sqrte = 1.64872127070012814684865078781416357165377610071014801157507931\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   20,
					},
					File:   "math.flux",
					Source: "builtin sqrte",
					Start: ast.Position{
						Column: 1,
						Line:   20,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   20,
						},
						File:   "math.flux",
						Source: "sqrte",
						Start: ast.Position{
							Column: 9,
							Line:   20,
						},
					},
				},
				Name: "sqrte",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   20,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 17,
							Line:   20,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   20,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 17,
								Line:   20,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   20,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 17,
									Line:   20,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.sqrtpi = 1.77245385090551602729816748334114518279754945612238712821380779\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   23,
					},
					File:   "math.flux",
					Source: "builtin sqrtpi",
					Start: ast.Position{
						Column: 1,
						Line:   23,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   23,
						},
						File:   "math.flux",
						Source: "sqrtpi",
						Start: ast.Position{
							Column: 9,
							Line:   23,
						},
					},
				},
				Name: "sqrtpi",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 23,
							Line:   23,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 18,
							Line:   23,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   23,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 18,
								Line:   23,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   23,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 18,
									Line:   23,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.sqrtphi = 1.27201964951406896425242246173749149171560804184009624861664038\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   26,
					},
					File:   "math.flux",
					Source: "builtin sqrtphi",
					Start: ast.Position{
						Column: 1,
						Line:   26,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   26,
						},
						File:   "math.flux",
						Source: "sqrtphi",
						Start: ast.Position{
							Column: 9,
							Line:   26,
						},
					},
				},
				Name: "sqrtphi",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 24,
							Line:   26,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 19,
							Line:   26,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   26,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 19,
								Line:   26,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   26,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 19,
									Line:   26,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.ln2 = 0.693147180559945309417232121458176568075500134360255254120680009\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   29,
					},
					File:   "math.flux",
					Source: "builtin ln2",
					Start: ast.Position{
						Column: 1,
						Line:   29,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   29,
						},
						File:   "math.flux",
						Source: "ln2",
						Start: ast.Position{
							Column: 9,
							Line:   29,
						},
					},
				},
				Name: "ln2",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   29,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 15,
							Line:   29,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   29,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 15,
								Line:   29,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   29,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 15,
									Line:   29,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.log2e = 1 รท math.ln2\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   32,
					},
					File:   "math.flux",
					Source: "builtin log2e",
					Start: ast.Position{
						Column: 1,
						Line:   32,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   32,
						},
						File:   "math.flux",
						Source: "log2e",
						Start: ast.Position{
							Column: 9,
							Line:   32,
						},
					},
				},
				Name: "log2e",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   32,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 17,
							Line:   32,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   32,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 17,
								Line:   32,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   32,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 17,
									Line:   32,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.ln10 = 2.30258509299404568401799145468436420760110148862877297603332790\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   35,
					},
					File:   "math.flux",
					Source: "builtin ln10",
					Start: ast.Position{
						Column: 1,
						Line:   35,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   35,
						},
						File:   "math.flux",
						Source: "ln10",
						Start: ast.Position{
							Column: 9,
							Line:   35,
						},
					},
				},
				Name: "ln10",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 21,
							Line:   35,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 16,
							Line:   35,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 21,
								Line:   35,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 16,
								Line:   35,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   35,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 16,
									Line:   35,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.log10e = 1 รท math.ln10\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   38,
					},
					File:   "math.flux",
					Source: "builtin log10e",
					Start: ast.Position{
						Column: 1,
						Line:   38,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   38,
						},
						File:   "math.flux",
						Source: "log10e",
						Start: ast.Position{
							Column: 9,
							Line:   38,
						},
					},
				},
				Name: "log10e",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 23,
							Line:   38,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 18,
							Line:   38,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   38,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 18,
								Line:   38,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   38,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 18,
									Line:   38,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.maxfloat = 1.797693134862315708145274237317043567981e+308\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   41,
					},
					File:   "math.flux",
					Source: "builtin maxfloat",
					Start: ast.Position{
						Column: 1,
						Line:   41,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   41,
						},
						File:   "math.flux",
						Source: "maxfloat",
						Start: ast.Position{
							Column: 9,
							Line:   41,
						},
					},
				},
				Name: "maxfloat",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 25,
							Line:   41,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 20,
							Line:   41,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   41,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 20,
								Line:   41,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   41,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 20,
									Line:   41,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.smallestNonzeroFloat = 4.940656458412465441765687928682213723651e-324\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 29,
						Line:   44,
					},
					File:   "math.flux",
					Source: "builtin smallestNonzeroFloat",
					Start: ast.Position{
						Column: 1,
						Line:   44,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 29,
							Line:   44,
						},
						File:   "math.flux",
						Source: "smallestNonzeroFloat",
						Start: ast.Position{
							Column: 9,
							Line:   44,
						},
					},
				},
				Name: "smallestNonzeroFloat",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 37,
							Line:   44,
						},
						File:   "math.flux",
						Source: "float",
						Start: ast.Position{
							Column: 32,
							Line:   44,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   44,
							},
							File:   "math.flux",
							Source: "float",
							Start: ast.Position{
								Column: 32,
								Line:   44,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   44,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 32,
									Line:   44,
								},
							},
						},
						Name: "float",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.maxint = 1<<63 - 1\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   47,
					},
					File:   "math.flux",
					Source: "builtin maxint",
					Start: ast.Position{
						Column: 1,
						Line:   47,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   47,
						},
						File:   "math.flux",
						Source: "maxint",
						Start: ast.Position{
							Column: 9,
							Line:   47,
						},
					},
				},
				Name: "maxint",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 21,
							Line:   47,
						},
						File:   "math.flux",
						Source: "int",
						Start: ast.Position{
							Column: 18,
							Line:   47,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 21,
								Line:   47,
							},
							File:   "math.flux",
							Source: "int",
							Start: ast.Position{
								Column: 18,
								Line:   47,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   47,
								},
								File:   "math.flux",
								Source: "int",
								Start: ast.Position{
									Column: 18,
									Line:   47,
								},
							},
						},
						Name: "int",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.minint = -1 << 63\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   50,
					},
					File:   "math.flux",
					Source: "builtin minint",
					Start: ast.Position{
						Column: 1,
						Line:   50,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   50,
						},
						File:   "math.flux",
						Source: "minint",
						Start: ast.Position{
							Column: 9,
							Line:   50,
						},
					},
				},
				Name: "minint",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 21,
							Line:   50,
						},
						File:   "math.flux",
						Source: "int",
						Start: ast.Position{
							Column: 18,
							Line:   50,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 21,
								Line:   50,
							},
							File:   "math.flux",
							Source: "int",
							Start: ast.Position{
								Column: 18,
								Line:   50,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   50,
								},
								File:   "math.flux",
								Source: "int",
								Start: ast.Position{
									Column: 18,
									Line:   50,
								},
							},
						},
						Name: "int",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// math.maxuint = 1<<64 - 1\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   53,
					},
					File:   "math.flux",
					Source: "builtin maxuint",
					Start: ast.Position{
						Column: 1,
						Line:   53,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   53,
						},
						File:   "math.flux",
						Source: "maxuint",
						Start: ast.Position{
							Column: 9,
							Line:   53,
						},
					},
				},
				Name: "maxuint",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 23,
							Line:   53,
						},
						File:   "math.flux",
						Source: "uint",
						Start: ast.Position{
							Column: 19,
							Line:   53,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.NamedType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   53,
							},
							File:   "math.flux",
							Source: "uint",
							Start: ast.Position{
								Column: 19,
								Line:   53,
							},
						},
					},
					ID: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   53,
								},
								File:   "math.flux",
								Source: "uint",
								Start: ast.Position{
									Column: 19,
									Line:   53,
								},
							},
						},
						Name: "uint",
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// Abs returns x as a positive value.\n"}, ast.Comment{Text: "//\n"}, ast.Comment{Text: "// Example\n"}, ast.Comment{Text: "//\n"}, ast.Comment{Text: "//    import \"math\"\n"}, ast.Comment{Text: "//    math.abs(x: -10.42) // 10.42\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   62,
					},
					File:   "math.flux",
					Source: "builtin abs",
					Start: ast.Position{
						Column: 1,
						Line:   62,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   62,
						},
						File:   "math.flux",
						Source: "abs",
						Start: ast.Position{
							Column: 9,
							Line:   62,
						},
					},
				},
				Name: "abs",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   62,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   62,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   62,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   62,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   62,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   62,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   62,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   62,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   62,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   62,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   62,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   62,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   62,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   62,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   62,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   62,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   63,
					},
					File:   "math.flux",
					Source: "builtin acos",
					Start: ast.Position{
						Column: 1,
						Line:   63,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   63,
						},
						File:   "math.flux",
						Source: "acos",
						Start: ast.Position{
							Column: 9,
							Line:   63,
						},
					},
				},
				Name: "acos",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   63,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   63,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   63,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   63,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   63,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   63,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   63,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   63,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   63,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   63,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   63,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   63,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   63,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   63,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   63,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   63,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   64,
					},
					File:   "math.flux",
					Source: "builtin acosh",
					Start: ast.Position{
						Column: 1,
						Line:   64,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   64,
						},
						File:   "math.flux",
						Source: "acosh",
						Start: ast.Position{
							Column: 9,
							Line:   64,
						},
					},
				},
				Name: "acosh",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   64,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   64,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   64,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   64,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   64,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   64,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   64,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   64,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   64,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   64,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   64,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   64,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   64,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   64,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   64,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   64,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   65,
					},
					File:   "math.flux",
					Source: "builtin asin",
					Start: ast.Position{
						Column: 1,
						Line:   65,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   65,
						},
						File:   "math.flux",
						Source: "asin",
						Start: ast.Position{
							Column: 9,
							Line:   65,
						},
					},
				},
				Name: "asin",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   65,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   65,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   65,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   65,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   65,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   65,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   65,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   65,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   65,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   65,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   65,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   65,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   65,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   65,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   65,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   65,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   66,
					},
					File:   "math.flux",
					Source: "builtin asinh",
					Start: ast.Position{
						Column: 1,
						Line:   66,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   66,
						},
						File:   "math.flux",
						Source: "asinh",
						Start: ast.Position{
							Column: 9,
							Line:   66,
						},
					},
				},
				Name: "asinh",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   66,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   66,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   66,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   66,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   66,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   66,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   66,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   66,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   66,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   66,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   66,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   66,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   66,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   66,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   66,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   66,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   67,
					},
					File:   "math.flux",
					Source: "builtin atan",
					Start: ast.Position{
						Column: 1,
						Line:   67,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   67,
						},
						File:   "math.flux",
						Source: "atan",
						Start: ast.Position{
							Column: 9,
							Line:   67,
						},
					},
				},
				Name: "atan",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   67,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   67,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   67,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   67,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   67,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   67,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   67,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   67,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   67,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   67,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   67,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   67,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   67,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   67,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   67,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   67,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   68,
					},
					File:   "math.flux",
					Source: "builtin atan2",
					Start: ast.Position{
						Column: 1,
						Line:   68,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   68,
						},
						File:   "math.flux",
						Source: "atan2",
						Start: ast.Position{
							Column: 9,
							Line:   68,
						},
					},
				},
				Name: "atan2",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 46,
							Line:   68,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   68,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   68,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   68,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   68,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   68,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   68,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   68,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   68,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   68,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   68,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   68,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   68,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 28,
									Line:   68,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   68,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 28,
										Line:   68,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   68,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   68,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 36,
											Line:   68,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 31,
											Line:   68,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 46,
									Line:   68,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 41,
									Line:   68,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 46,
										Line:   68,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 41,
										Line:   68,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   69,
					},
					File:   "math.flux",
					Source: "builtin atanh",
					Start: ast.Position{
						Column: 1,
						Line:   69,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   69,
						},
						File:   "math.flux",
						Source: "atanh",
						Start: ast.Position{
							Column: 9,
							Line:   69,
						},
					},
				},
				Name: "atanh",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   69,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   69,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   69,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   69,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   69,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   69,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   69,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   69,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   69,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   69,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   69,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   69,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   69,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   69,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   69,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   69,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   70,
					},
					File:   "math.flux",
					Source: "builtin cbrt",
					Start: ast.Position{
						Column: 1,
						Line:   70,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   70,
						},
						File:   "math.flux",
						Source: "cbrt",
						Start: ast.Position{
							Column: 9,
							Line:   70,
						},
					},
				},
				Name: "cbrt",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   70,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   70,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   70,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   70,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   70,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   70,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   70,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   70,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   70,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   70,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   70,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   70,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   70,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   70,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   70,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   70,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   71,
					},
					File:   "math.flux",
					Source: "builtin ceil",
					Start: ast.Position{
						Column: 1,
						Line:   71,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   71,
						},
						File:   "math.flux",
						Source: "ceil",
						Start: ast.Position{
							Column: 9,
							Line:   71,
						},
					},
				},
				Name: "ceil",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   71,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   71,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   71,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   71,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   71,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   71,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   71,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   71,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   71,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   71,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   71,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   71,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   71,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   71,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   71,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   71,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   72,
					},
					File:   "math.flux",
					Source: "builtin copysign",
					Start: ast.Position{
						Column: 1,
						Line:   72,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   72,
						},
						File:   "math.flux",
						Source: "copysign",
						Start: ast.Position{
							Column: 9,
							Line:   72,
						},
					},
				},
				Name: "copysign",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 49,
							Line:   72,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 20,
							Line:   72,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 49,
								Line:   72,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 20,
								Line:   72,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   72,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 21,
									Line:   72,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   72,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 21,
										Line:   72,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   72,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 24,
										Line:   72,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   72,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 24,
											Line:   72,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   72,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 31,
									Line:   72,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 32,
										Line:   72,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 31,
										Line:   72,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 39,
										Line:   72,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 34,
										Line:   72,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   72,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 34,
											Line:   72,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 49,
									Line:   72,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 44,
									Line:   72,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   72,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 44,
										Line:   72,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   73,
					},
					File:   "math.flux",
					Source: "builtin cos",
					Start: ast.Position{
						Column: 1,
						Line:   73,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   73,
						},
						File:   "math.flux",
						Source: "cos",
						Start: ast.Position{
							Column: 9,
							Line:   73,
						},
					},
				},
				Name: "cos",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   73,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   73,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   73,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   73,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   73,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   73,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   73,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   73,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   73,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   73,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   73,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   73,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   73,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   73,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   73,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   73,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   74,
					},
					File:   "math.flux",
					Source: "builtin cosh",
					Start: ast.Position{
						Column: 1,
						Line:   74,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   74,
						},
						File:   "math.flux",
						Source: "cosh",
						Start: ast.Position{
							Column: 9,
							Line:   74,
						},
					},
				},
				Name: "cosh",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   74,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   74,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   74,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   74,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   74,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   74,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   74,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   74,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   74,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   74,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   74,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   74,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   74,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   74,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   74,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   74,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   75,
					},
					File:   "math.flux",
					Source: "builtin dim",
					Start: ast.Position{
						Column: 1,
						Line:   75,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   75,
						},
						File:   "math.flux",
						Source: "dim",
						Start: ast.Position{
							Column: 9,
							Line:   75,
						},
					},
				},
				Name: "dim",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 44,
							Line:   75,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   75,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   75,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   75,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   75,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   75,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   75,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   75,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   75,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   75,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   75,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   75,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   75,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 26,
									Line:   75,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   75,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 26,
										Line:   75,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   75,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   75,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   75,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 29,
											Line:   75,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   75,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 39,
									Line:   75,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   75,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 39,
										Line:   75,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   76,
					},
					File:   "math.flux",
					Source: "builtin erf",
					Start: ast.Position{
						Column: 1,
						Line:   76,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   76,
						},
						File:   "math.flux",
						Source: "erf",
						Start: ast.Position{
							Column: 9,
							Line:   76,
						},
					},
				},
				Name: "erf",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   76,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   76,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   76,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   76,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   76,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   76,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   76,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   76,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   76,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   76,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   76,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   76,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   76,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   76,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   76,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   76,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   77,
					},
					File:   "math.flux",
					Source: "builtin erfc",
					Start: ast.Position{
						Column: 1,
						Line:   77,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   77,
						},
						File:   "math.flux",
						Source: "erfc",
						Start: ast.Position{
							Column: 9,
							Line:   77,
						},
					},
				},
				Name: "erfc",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   77,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   77,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   77,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   77,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   77,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   77,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   77,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   77,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   77,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   77,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   77,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   77,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   77,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   77,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   77,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   77,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   78,
					},
					File:   "math.flux",
					Source: "builtin erfcinv",
					Start: ast.Position{
						Column: 1,
						Line:   78,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   78,
						},
						File:   "math.flux",
						Source: "erfcinv",
						Start: ast.Position{
							Column: 9,
							Line:   78,
						},
					},
				},
				Name: "erfcinv",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 38,
							Line:   78,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 19,
							Line:   78,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 38,
								Line:   78,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 19,
								Line:   78,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   78,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 20,
									Line:   78,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   78,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 20,
										Line:   78,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   78,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 23,
										Line:   78,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   78,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 23,
											Line:   78,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 38,
									Line:   78,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 33,
									Line:   78,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 38,
										Line:   78,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 33,
										Line:   78,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   79,
					},
					File:   "math.flux",
					Source: "builtin erfinv",
					Start: ast.Position{
						Column: 1,
						Line:   79,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   79,
						},
						File:   "math.flux",
						Source: "erfinv",
						Start: ast.Position{
							Column: 9,
							Line:   79,
						},
					},
				},
				Name: "erfinv",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 37,
							Line:   79,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 18,
							Line:   79,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   79,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 18,
								Line:   79,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   79,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 19,
									Line:   79,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   79,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 19,
										Line:   79,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   79,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 22,
										Line:   79,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   79,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 22,
											Line:   79,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   79,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 32,
									Line:   79,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 37,
										Line:   79,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 32,
										Line:   79,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   80,
					},
					File:   "math.flux",
					Source: "builtin exp",
					Start: ast.Position{
						Column: 1,
						Line:   80,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   80,
						},
						File:   "math.flux",
						Source: "exp",
						Start: ast.Position{
							Column: 9,
							Line:   80,
						},
					},
				},
				Name: "exp",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   80,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   80,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   80,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   80,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   80,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   80,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   80,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   80,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   80,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   80,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   80,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   80,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   80,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   80,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   80,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   80,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   81,
					},
					File:   "math.flux",
					Source: "builtin exp2",
					Start: ast.Position{
						Column: 1,
						Line:   81,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   81,
						},
						File:   "math.flux",
						Source: "exp2",
						Start: ast.Position{
							Column: 9,
							Line:   81,
						},
					},
				},
				Name: "exp2",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   81,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   81,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   81,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   81,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   81,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   81,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   81,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   81,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   81,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   81,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   81,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   81,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   81,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   81,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   81,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   81,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   82,
					},
					File:   "math.flux",
					Source: "builtin expm1",
					Start: ast.Position{
						Column: 1,
						Line:   82,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   82,
						},
						File:   "math.flux",
						Source: "expm1",
						Start: ast.Position{
							Column: 9,
							Line:   82,
						},
					},
				},
				Name: "expm1",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   82,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   82,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   82,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   82,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   82,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   82,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   82,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   82,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   82,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   82,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   82,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   82,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   82,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   82,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   82,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   82,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   83,
					},
					File:   "math.flux",
					Source: "builtin float64bits",
					Start: ast.Position{
						Column: 1,
						Line:   83,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   83,
						},
						File:   "math.flux",
						Source: "float64bits",
						Start: ast.Position{
							Column: 9,
							Line:   83,
						},
					},
				},
				Name: "float64bits",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   83,
						},
						File:   "math.flux",
						Source: "(f: float) => uint",
						Start: ast.Position{
							Column: 23,
							Line:   83,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 41,
								Line:   83,
							},
							File:   "math.flux",
							Source: "(f: float) => uint",
							Start: ast.Position{
								Column: 23,
								Line:   83,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   83,
								},
								File:   "math.flux",
								Source: "f: float",
								Start: ast.Position{
									Column: 24,
									Line:   83,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   83,
									},
									File:   "math.flux",
									Source: "f",
									Start: ast.Position{
										Column: 24,
										Line:   83,
									},
								},
							},
							Name: "f",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 32,
										Line:   83,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 27,
										Line:   83,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 32,
											Line:   83,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 27,
											Line:   83,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   83,
								},
								File:   "math.flux",
								Source: "uint",
								Start: ast.Position{
									Column: 37,
									Line:   83,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   83,
									},
									File:   "math.flux",
									Source: "uint",
									Start: ast.Position{
										Column: 37,
										Line:   83,
									},
								},
							},
							Name: "uint",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 24,
						Line:   84,
					},
					File:   "math.flux",
					Source: "builtin float64frombits",
					Start: ast.Position{
						Column: 1,
						Line:   84,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 24,
							Line:   84,
						},
						File:   "math.flux",
						Source: "float64frombits",
						Start: ast.Position{
							Column: 9,
							Line:   84,
						},
					},
				},
				Name: "float64frombits",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 45,
							Line:   84,
						},
						File:   "math.flux",
						Source: "(b: uint) => float",
						Start: ast.Position{
							Column: 27,
							Line:   84,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 45,
								Line:   84,
							},
							File:   "math.flux",
							Source: "(b: uint) => float",
							Start: ast.Position{
								Column: 27,
								Line:   84,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   84,
								},
								File:   "math.flux",
								Source: "b: uint",
								Start: ast.Position{
									Column: 28,
									Line:   84,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   84,
									},
									File:   "math.flux",
									Source: "b",
									Start: ast.Position{
										Column: 28,
										Line:   84,
									},
								},
							},
							Name: "b",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   84,
									},
									File:   "math.flux",
									Source: "uint",
									Start: ast.Position{
										Column: 31,
										Line:   84,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   84,
										},
										File:   "math.flux",
										Source: "uint",
										Start: ast.Position{
											Column: 31,
											Line:   84,
										},
									},
								},
								Name: "uint",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   84,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 40,
									Line:   84,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   84,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 40,
										Line:   84,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   85,
					},
					File:   "math.flux",
					Source: "builtin floor",
					Start: ast.Position{
						Column: 1,
						Line:   85,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   85,
						},
						File:   "math.flux",
						Source: "floor",
						Start: ast.Position{
							Column: 9,
							Line:   85,
						},
					},
				},
				Name: "floor",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   85,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   85,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   85,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   85,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   85,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   85,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   85,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   85,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   85,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   85,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   85,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   85,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   85,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   85,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   85,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   85,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   86,
					},
					File:   "math.flux",
					Source: "builtin frexp",
					Start: ast.Position{
						Column: 1,
						Line:   86,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   86,
						},
						File:   "math.flux",
						Source: "frexp",
						Start: ast.Position{
							Column: 9,
							Line:   86,
						},
					},
				},
				Name: "frexp",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 54,
							Line:   86,
						},
						File:   "math.flux",
						Source: "(f: float) => {frac: float, exp: int}",
						Start: ast.Position{
							Column: 17,
							Line:   86,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   86,
							},
							File:   "math.flux",
							Source: "(f: float) => {frac: float, exp: int}",
							Start: ast.Position{
								Column: 17,
								Line:   86,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   86,
								},
								File:   "math.flux",
								Source: "f: float",
								Start: ast.Position{
									Column: 18,
									Line:   86,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   86,
									},
									File:   "math.flux",
									Source: "f",
									Start: ast.Position{
										Column: 18,
										Line:   86,
									},
								},
							},
							Name: "f",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   86,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   86,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   86,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   86,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.RecordType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   86,
								},
								File:   "math.flux",
								Source: "{frac: float, exp: int}",
								Start: ast.Position{
									Column: 31,
									Line:   86,
								},
							},
						},
						Properties: []*ast.PropertyType{&ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   86,
									},
									File:   "math.flux",
									Source: "frac: float",
									Start: ast.Position{
										Column: 32,
										Line:   86,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 36,
											Line:   86,
										},
										File:   "math.flux",
										Source: "frac",
										Start: ast.Position{
											Column: 32,
											Line:   86,
										},
									},
								},
								Name: "frac",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   86,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 38,
											Line:   86,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   86,
											},
											File:   "math.flux",
											Source: "float",
											Start: ast.Position{
												Column: 38,
												Line:   86,
											},
										},
									},
									Name: "float",
								},
							},
						}, &ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 53,
										Line:   86,
									},
									File:   "math.flux",
									Source: "exp: int",
									Start: ast.Position{
										Column: 45,
										Line:   86,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   86,
										},
										File:   "math.flux",
										Source: "exp",
										Start: ast.Position{
											Column: 45,
											Line:   86,
										},
									},
								},
								Name: "exp",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   86,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 50,
											Line:   86,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   86,
											},
											File:   "math.flux",
											Source: "int",
											Start: ast.Position{
												Column: 50,
												Line:   86,
											},
										},
									},
									Name: "int",
								},
							},
						}},
						Tvar: nil,
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   87,
					},
					File:   "math.flux",
					Source: "builtin gamma",
					Start: ast.Position{
						Column: 1,
						Line:   87,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   87,
						},
						File:   "math.flux",
						Source: "gamma",
						Start: ast.Position{
							Column: 9,
							Line:   87,
						},
					},
				},
				Name: "gamma",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   87,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   87,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   87,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   87,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   87,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   87,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   87,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   87,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   87,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   87,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   87,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   87,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   87,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   87,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   87,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   87,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   88,
					},
					File:   "math.flux",
					Source: "builtin hypot",
					Start: ast.Position{
						Column: 1,
						Line:   88,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   88,
						},
						File:   "math.flux",
						Source: "hypot",
						Start: ast.Position{
							Column: 9,
							Line:   88,
						},
					},
				},
				Name: "hypot",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   88,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   88,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   88,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   88,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   88,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   88,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   88,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   88,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   88,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   88,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   88,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   88,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   88,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   88,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   88,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   88,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   89,
					},
					File:   "math.flux",
					Source: "builtin ilogb",
					Start: ast.Position{
						Column: 1,
						Line:   89,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   89,
						},
						File:   "math.flux",
						Source: "ilogb",
						Start: ast.Position{
							Column: 9,
							Line:   89,
						},
					},
				},
				Name: "ilogb",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   89,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   89,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   89,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   89,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   89,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   89,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   89,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   89,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   89,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   89,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   89,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   89,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   89,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   89,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   89,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   89,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   90,
					},
					File:   "math.flux",
					Source: "builtin mInf",
					Start: ast.Position{
						Column: 1,
						Line:   90,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   90,
						},
						File:   "math.flux",
						Source: "mInf",
						Start: ast.Position{
							Column: 9,
							Line:   90,
						},
					},
				},
				Name: "mInf",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   90,
						},
						File:   "math.flux",
						Source: "(sign: int) => float",
						Start: ast.Position{
							Column: 16,
							Line:   90,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   90,
							},
							File:   "math.flux",
							Source: "(sign: int) => float",
							Start: ast.Position{
								Column: 16,
								Line:   90,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   90,
								},
								File:   "math.flux",
								Source: "sign: int",
								Start: ast.Position{
									Column: 17,
									Line:   90,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   90,
									},
									File:   "math.flux",
									Source: "sign",
									Start: ast.Position{
										Column: 17,
										Line:   90,
									},
								},
							},
							Name: "sign",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   90,
									},
									File:   "math.flux",
									Source: "int",
									Start: ast.Position{
										Column: 23,
										Line:   90,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   90,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 23,
											Line:   90,
										},
									},
								},
								Name: "int",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   90,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   90,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   90,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   90,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   91,
					},
					File:   "math.flux",
					Source: "builtin isInf",
					Start: ast.Position{
						Column: 1,
						Line:   91,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   91,
						},
						File:   "math.flux",
						Source: "isInf",
						Start: ast.Position{
							Column: 9,
							Line:   91,
						},
					},
				},
				Name: "isInf",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 46,
							Line:   91,
						},
						File:   "math.flux",
						Source: "(f: float, sign: int) => bool",
						Start: ast.Position{
							Column: 17,
							Line:   91,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   91,
							},
							File:   "math.flux",
							Source: "(f: float, sign: int) => bool",
							Start: ast.Position{
								Column: 17,
								Line:   91,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   91,
								},
								File:   "math.flux",
								Source: "f: float",
								Start: ast.Position{
									Column: 18,
									Line:   91,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   91,
									},
									File:   "math.flux",
									Source: "f",
									Start: ast.Position{
										Column: 18,
										Line:   91,
									},
								},
							},
							Name: "f",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   91,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   91,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   91,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   91,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   91,
								},
								File:   "math.flux",
								Source: "sign: int",
								Start: ast.Position{
									Column: 28,
									Line:   91,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 32,
										Line:   91,
									},
									File:   "math.flux",
									Source: "sign",
									Start: ast.Position{
										Column: 28,
										Line:   91,
									},
								},
							},
							Name: "sign",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 37,
										Line:   91,
									},
									File:   "math.flux",
									Source: "int",
									Start: ast.Position{
										Column: 34,
										Line:   91,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   91,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 34,
											Line:   91,
										},
									},
								},
								Name: "int",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 46,
									Line:   91,
								},
								File:   "math.flux",
								Source: "bool",
								Start: ast.Position{
									Column: 42,
									Line:   91,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 46,
										Line:   91,
									},
									File:   "math.flux",
									Source: "bool",
									Start: ast.Position{
										Column: 42,
										Line:   91,
									},
								},
							},
							Name: "bool",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   92,
					},
					File:   "math.flux",
					Source: "builtin isNaN",
					Start: ast.Position{
						Column: 1,
						Line:   92,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   92,
						},
						File:   "math.flux",
						Source: "isNaN",
						Start: ast.Position{
							Column: 9,
							Line:   92,
						},
					},
				},
				Name: "isNaN",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   92,
						},
						File:   "math.flux",
						Source: "(f: float) => bool",
						Start: ast.Position{
							Column: 17,
							Line:   92,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   92,
							},
							File:   "math.flux",
							Source: "(f: float) => bool",
							Start: ast.Position{
								Column: 17,
								Line:   92,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   92,
								},
								File:   "math.flux",
								Source: "f: float",
								Start: ast.Position{
									Column: 18,
									Line:   92,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   92,
									},
									File:   "math.flux",
									Source: "f",
									Start: ast.Position{
										Column: 18,
										Line:   92,
									},
								},
							},
							Name: "f",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   92,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   92,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   92,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   92,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   92,
								},
								File:   "math.flux",
								Source: "bool",
								Start: ast.Position{
									Column: 31,
									Line:   92,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   92,
									},
									File:   "math.flux",
									Source: "bool",
									Start: ast.Position{
										Column: 31,
										Line:   92,
									},
								},
							},
							Name: "bool",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   93,
					},
					File:   "math.flux",
					Source: "builtin j0",
					Start: ast.Position{
						Column: 1,
						Line:   93,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   93,
						},
						File:   "math.flux",
						Source: "j0",
						Start: ast.Position{
							Column: 9,
							Line:   93,
						},
					},
				},
				Name: "j0",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 33,
							Line:   93,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 14,
							Line:   93,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 33,
								Line:   93,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 14,
								Line:   93,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   93,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 15,
									Line:   93,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   93,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 15,
										Line:   93,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   93,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 18,
										Line:   93,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   93,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 18,
											Line:   93,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 33,
									Line:   93,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 28,
									Line:   93,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   93,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 28,
										Line:   93,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   94,
					},
					File:   "math.flux",
					Source: "builtin j1",
					Start: ast.Position{
						Column: 1,
						Line:   94,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   94,
						},
						File:   "math.flux",
						Source: "j1",
						Start: ast.Position{
							Column: 9,
							Line:   94,
						},
					},
				},
				Name: "j1",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 33,
							Line:   94,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 14,
							Line:   94,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 33,
								Line:   94,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 14,
								Line:   94,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   94,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 15,
									Line:   94,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   94,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 15,
										Line:   94,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   94,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 18,
										Line:   94,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   94,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 18,
											Line:   94,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 33,
									Line:   94,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 28,
									Line:   94,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   94,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 28,
										Line:   94,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   95,
					},
					File:   "math.flux",
					Source: "builtin jn",
					Start: ast.Position{
						Column: 1,
						Line:   95,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   95,
						},
						File:   "math.flux",
						Source: "jn",
						Start: ast.Position{
							Column: 9,
							Line:   95,
						},
					},
				},
				Name: "jn",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   95,
						},
						File:   "math.flux",
						Source: "(n: int, x: float) => float",
						Start: ast.Position{
							Column: 14,
							Line:   95,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 41,
								Line:   95,
							},
							File:   "math.flux",
							Source: "(n: int, x: float) => float",
							Start: ast.Position{
								Column: 14,
								Line:   95,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   95,
								},
								File:   "math.flux",
								Source: "n: int",
								Start: ast.Position{
									Column: 15,
									Line:   95,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   95,
									},
									File:   "math.flux",
									Source: "n",
									Start: ast.Position{
										Column: 15,
										Line:   95,
									},
								},
							},
							Name: "n",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   95,
									},
									File:   "math.flux",
									Source: "int",
									Start: ast.Position{
										Column: 18,
										Line:   95,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   95,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 18,
											Line:   95,
										},
									},
								},
								Name: "int",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   95,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 23,
									Line:   95,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   95,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 23,
										Line:   95,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   95,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 26,
										Line:   95,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   95,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 26,
											Line:   95,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   95,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 36,
									Line:   95,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   95,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 36,
										Line:   95,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   96,
					},
					File:   "math.flux",
					Source: "builtin ldexp",
					Start: ast.Position{
						Column: 1,
						Line:   96,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   96,
						},
						File:   "math.flux",
						Source: "ldexp",
						Start: ast.Position{
							Column: 9,
							Line:   96,
						},
					},
				},
				Name: "ldexp",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 49,
							Line:   96,
						},
						File:   "math.flux",
						Source: "(frac: float, exp: int) => float",
						Start: ast.Position{
							Column: 17,
							Line:   96,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 49,
								Line:   96,
							},
							File:   "math.flux",
							Source: "(frac: float, exp: int) => float",
							Start: ast.Position{
								Column: 17,
								Line:   96,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   96,
								},
								File:   "math.flux",
								Source: "frac: float",
								Start: ast.Position{
									Column: 18,
									Line:   96,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   96,
									},
									File:   "math.flux",
									Source: "frac",
									Start: ast.Position{
										Column: 18,
										Line:   96,
									},
								},
							},
							Name: "frac",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   96,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 24,
										Line:   96,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   96,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 24,
											Line:   96,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   96,
								},
								File:   "math.flux",
								Source: "exp: int",
								Start: ast.Position{
									Column: 31,
									Line:   96,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   96,
									},
									File:   "math.flux",
									Source: "exp",
									Start: ast.Position{
										Column: 31,
										Line:   96,
									},
								},
							},
							Name: "exp",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 39,
										Line:   96,
									},
									File:   "math.flux",
									Source: "int",
									Start: ast.Position{
										Column: 36,
										Line:   96,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   96,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 36,
											Line:   96,
										},
									},
								},
								Name: "int",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 49,
									Line:   96,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 44,
									Line:   96,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   96,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 44,
										Line:   96,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   97,
					},
					File:   "math.flux",
					Source: "builtin lgamma",
					Start: ast.Position{
						Column: 1,
						Line:   97,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   97,
						},
						File:   "math.flux",
						Source: "lgamma",
						Start: ast.Position{
							Column: 9,
							Line:   97,
						},
					},
				},
				Name: "lgamma",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 58,
							Line:   97,
						},
						File:   "math.flux",
						Source: "(x: float) => {lgamma: float, sign: int}",
						Start: ast.Position{
							Column: 18,
							Line:   97,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 58,
								Line:   97,
							},
							File:   "math.flux",
							Source: "(x: float) => {lgamma: float, sign: int}",
							Start: ast.Position{
								Column: 18,
								Line:   97,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   97,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 19,
									Line:   97,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   97,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 19,
										Line:   97,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   97,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 22,
										Line:   97,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   97,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 22,
											Line:   97,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.RecordType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 58,
									Line:   97,
								},
								File:   "math.flux",
								Source: "{lgamma: float, sign: int}",
								Start: ast.Position{
									Column: 32,
									Line:   97,
								},
							},
						},
						Properties: []*ast.PropertyType{&ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 46,
										Line:   97,
									},
									File:   "math.flux",
									Source: "lgamma: float",
									Start: ast.Position{
										Column: 33,
										Line:   97,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   97,
										},
										File:   "math.flux",
										Source: "lgamma",
										Start: ast.Position{
											Column: 33,
											Line:   97,
										},
									},
								},
								Name: "lgamma",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   97,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 41,
											Line:   97,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   97,
											},
											File:   "math.flux",
											Source: "float",
											Start: ast.Position{
												Column: 41,
												Line:   97,
											},
										},
									},
									Name: "float",
								},
							},
						}, &ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   97,
									},
									File:   "math.flux",
									Source: "sign: int",
									Start: ast.Position{
										Column: 48,
										Line:   97,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 52,
											Line:   97,
										},
										File:   "math.flux",
										Source: "sign",
										Start: ast.Position{
											Column: 48,
											Line:   97,
										},
									},
								},
								Name: "sign",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 57,
											Line:   97,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 54,
											Line:   97,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 57,
												Line:   97,
											},
											File:   "math.flux",
											Source: "int",
											Start: ast.Position{
												Column: 54,
												Line:   97,
											},
										},
									},
									Name: "int",
								},
							},
						}},
						Tvar: nil,
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   98,
					},
					File:   "math.flux",
					Source: "builtin log",
					Start: ast.Position{
						Column: 1,
						Line:   98,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   98,
						},
						File:   "math.flux",
						Source: "log",
						Start: ast.Position{
							Column: 9,
							Line:   98,
						},
					},
				},
				Name: "log",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   98,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   98,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   98,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   98,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   98,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   98,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   98,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   98,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   98,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   98,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   98,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   98,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   98,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   98,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   98,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   98,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   99,
					},
					File:   "math.flux",
					Source: "builtin log10",
					Start: ast.Position{
						Column: 1,
						Line:   99,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   99,
						},
						File:   "math.flux",
						Source: "log10",
						Start: ast.Position{
							Column: 9,
							Line:   99,
						},
					},
				},
				Name: "log10",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   99,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   99,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   99,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   99,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   99,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   99,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   99,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   99,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   99,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   99,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   99,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   99,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   99,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   99,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   99,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   99,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   100,
					},
					File:   "math.flux",
					Source: "builtin log1p",
					Start: ast.Position{
						Column: 1,
						Line:   100,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   100,
						},
						File:   "math.flux",
						Source: "log1p",
						Start: ast.Position{
							Column: 9,
							Line:   100,
						},
					},
				},
				Name: "log1p",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   100,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   100,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   100,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   100,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   100,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   100,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   100,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   100,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   100,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   100,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   100,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   100,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   100,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   100,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   100,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   100,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   101,
					},
					File:   "math.flux",
					Source: "builtin log2",
					Start: ast.Position{
						Column: 1,
						Line:   101,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   101,
						},
						File:   "math.flux",
						Source: "log2",
						Start: ast.Position{
							Column: 9,
							Line:   101,
						},
					},
				},
				Name: "log2",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   101,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   101,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   101,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   101,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   101,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   101,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   101,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   101,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   101,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   101,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   101,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   101,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   101,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   101,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   101,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   101,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   102,
					},
					File:   "math.flux",
					Source: "builtin logb",
					Start: ast.Position{
						Column: 1,
						Line:   102,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   102,
						},
						File:   "math.flux",
						Source: "logb",
						Start: ast.Position{
							Column: 9,
							Line:   102,
						},
					},
				},
				Name: "logb",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   102,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   102,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   102,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   102,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   102,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   102,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   102,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   102,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   102,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   102,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   102,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   102,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   102,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   102,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   102,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   102,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   103,
					},
					File:   "math.flux",
					Source: "builtin mMax",
					Start: ast.Position{
						Column: 1,
						Line:   103,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   103,
						},
						File:   "math.flux",
						Source: "mMax",
						Start: ast.Position{
							Column: 9,
							Line:   103,
						},
					},
				},
				Name: "mMax",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 45,
							Line:   103,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   103,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 45,
								Line:   103,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   103,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   103,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   103,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   103,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   103,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   103,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   103,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   103,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   103,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   103,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 27,
									Line:   103,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   103,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 27,
										Line:   103,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   103,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   103,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   103,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 30,
											Line:   103,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   103,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 40,
									Line:   103,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   103,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 40,
										Line:   103,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   104,
					},
					File:   "math.flux",
					Source: "builtin mMin",
					Start: ast.Position{
						Column: 1,
						Line:   104,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   104,
						},
						File:   "math.flux",
						Source: "mMin",
						Start: ast.Position{
							Column: 9,
							Line:   104,
						},
					},
				},
				Name: "mMin",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 45,
							Line:   104,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   104,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 45,
								Line:   104,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   104,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   104,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   104,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   104,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   104,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   104,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   104,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   104,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   104,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   104,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 27,
									Line:   104,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   104,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 27,
										Line:   104,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   104,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   104,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   104,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 30,
											Line:   104,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   104,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 40,
									Line:   104,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   104,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 40,
										Line:   104,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   105,
					},
					File:   "math.flux",
					Source: "builtin mod",
					Start: ast.Position{
						Column: 1,
						Line:   105,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   105,
						},
						File:   "math.flux",
						Source: "mod",
						Start: ast.Position{
							Column: 9,
							Line:   105,
						},
					},
				},
				Name: "mod",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 44,
							Line:   105,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   105,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   105,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   105,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   105,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   105,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   105,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   105,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   105,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   105,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   105,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   105,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   105,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 26,
									Line:   105,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   105,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 26,
										Line:   105,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   105,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   105,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   105,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 29,
											Line:   105,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   105,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 39,
									Line:   105,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   105,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 39,
										Line:   105,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   106,
					},
					File:   "math.flux",
					Source: "builtin modf",
					Start: ast.Position{
						Column: 1,
						Line:   106,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   106,
						},
						File:   "math.flux",
						Source: "modf",
						Start: ast.Position{
							Column: 9,
							Line:   106,
						},
					},
				},
				Name: "modf",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 55,
							Line:   106,
						},
						File:   "math.flux",
						Source: "(f: float) => {int: float, frac: float}",
						Start: ast.Position{
							Column: 16,
							Line:   106,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 55,
								Line:   106,
							},
							File:   "math.flux",
							Source: "(f: float) => {int: float, frac: float}",
							Start: ast.Position{
								Column: 16,
								Line:   106,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   106,
								},
								File:   "math.flux",
								Source: "f: float",
								Start: ast.Position{
									Column: 17,
									Line:   106,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   106,
									},
									File:   "math.flux",
									Source: "f",
									Start: ast.Position{
										Column: 17,
										Line:   106,
									},
								},
							},
							Name: "f",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   106,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   106,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   106,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   106,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.RecordType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 55,
									Line:   106,
								},
								File:   "math.flux",
								Source: "{int: float, frac: float}",
								Start: ast.Position{
									Column: 30,
									Line:   106,
								},
							},
						},
						Properties: []*ast.PropertyType{&ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   106,
									},
									File:   "math.flux",
									Source: "int: float",
									Start: ast.Position{
										Column: 31,
										Line:   106,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   106,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 31,
											Line:   106,
										},
									},
								},
								Name: "int",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   106,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 36,
											Line:   106,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   106,
											},
											File:   "math.flux",
											Source: "float",
											Start: ast.Position{
												Column: 36,
												Line:   106,
											},
										},
									},
									Name: "float",
								},
							},
						}, &ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   106,
									},
									File:   "math.flux",
									Source: "frac: float",
									Start: ast.Position{
										Column: 43,
										Line:   106,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   106,
										},
										File:   "math.flux",
										Source: "frac",
										Start: ast.Position{
											Column: 43,
											Line:   106,
										},
									},
								},
								Name: "frac",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 54,
											Line:   106,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 49,
											Line:   106,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 54,
												Line:   106,
											},
											File:   "math.flux",
											Source: "float",
											Start: ast.Position{
												Column: 49,
												Line:   106,
											},
										},
									},
									Name: "float",
								},
							},
						}},
						Tvar: nil,
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   107,
					},
					File:   "math.flux",
					Source: "builtin NaN",
					Start: ast.Position{
						Column: 1,
						Line:   107,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   107,
						},
						File:   "math.flux",
						Source: "NaN",
						Start: ast.Position{
							Column: 9,
							Line:   107,
						},
					},
				},
				Name: "NaN",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   107,
						},
						File:   "math.flux",
						Source: "() => float",
						Start: ast.Position{
							Column: 15,
							Line:   107,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   107,
							},
							File:   "math.flux",
							Source: "() => float",
							Start: ast.Position{
								Column: 15,
								Line:   107,
							},
						},
					},
					Parameters: []*ast.ParameterType{},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   107,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 21,
									Line:   107,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   107,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   107,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 18,
						Line:   108,
					},
					File:   "math.flux",
					Source: "builtin nextafter",
					Start: ast.Position{
						Column: 1,
						Line:   108,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   108,
						},
						File:   "math.flux",
						Source: "nextafter",
						Start: ast.Position{
							Column: 9,
							Line:   108,
						},
					},
				},
				Name: "nextafter",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 50,
							Line:   108,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 21,
							Line:   108,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 50,
								Line:   108,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 21,
								Line:   108,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   108,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 22,
									Line:   108,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   108,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 22,
										Line:   108,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 30,
										Line:   108,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 25,
										Line:   108,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   108,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 25,
											Line:   108,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   108,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 32,
									Line:   108,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   108,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 32,
										Line:   108,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   108,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 35,
										Line:   108,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 40,
											Line:   108,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 35,
											Line:   108,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 50,
									Line:   108,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 45,
									Line:   108,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 50,
										Line:   108,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 45,
										Line:   108,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   109,
					},
					File:   "math.flux",
					Source: "builtin pow",
					Start: ast.Position{
						Column: 1,
						Line:   109,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   109,
						},
						File:   "math.flux",
						Source: "pow",
						Start: ast.Position{
							Column: 9,
							Line:   109,
						},
					},
				},
				Name: "pow",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 44,
							Line:   109,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   109,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   109,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   109,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   109,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   109,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   109,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   109,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   109,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   109,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   109,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   109,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   109,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 26,
									Line:   109,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   109,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 26,
										Line:   109,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   109,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   109,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   109,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 29,
											Line:   109,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   109,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 39,
									Line:   109,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   109,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 39,
										Line:   109,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   110,
					},
					File:   "math.flux",
					Source: "builtin pow10",
					Start: ast.Position{
						Column: 1,
						Line:   110,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   110,
						},
						File:   "math.flux",
						Source: "pow10",
						Start: ast.Position{
							Column: 9,
							Line:   110,
						},
					},
				},
				Name: "pow10",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   110,
						},
						File:   "math.flux",
						Source: "(n: int) => float",
						Start: ast.Position{
							Column: 17,
							Line:   110,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   110,
							},
							File:   "math.flux",
							Source: "(n: int) => float",
							Start: ast.Position{
								Column: 17,
								Line:   110,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   110,
								},
								File:   "math.flux",
								Source: "n: int",
								Start: ast.Position{
									Column: 18,
									Line:   110,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   110,
									},
									File:   "math.flux",
									Source: "n",
									Start: ast.Position{
										Column: 18,
										Line:   110,
									},
								},
							},
							Name: "n",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   110,
									},
									File:   "math.flux",
									Source: "int",
									Start: ast.Position{
										Column: 21,
										Line:   110,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   110,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 21,
											Line:   110,
										},
									},
								},
								Name: "int",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   110,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   110,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   110,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   110,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 18,
						Line:   111,
					},
					File:   "math.flux",
					Source: "builtin remainder",
					Start: ast.Position{
						Column: 1,
						Line:   111,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   111,
						},
						File:   "math.flux",
						Source: "remainder",
						Start: ast.Position{
							Column: 9,
							Line:   111,
						},
					},
				},
				Name: "remainder",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 50,
							Line:   111,
						},
						File:   "math.flux",
						Source: "(x: float, y: float) => float",
						Start: ast.Position{
							Column: 21,
							Line:   111,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 50,
								Line:   111,
							},
							File:   "math.flux",
							Source: "(x: float, y: float) => float",
							Start: ast.Position{
								Column: 21,
								Line:   111,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   111,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 22,
									Line:   111,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   111,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 22,
										Line:   111,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 30,
										Line:   111,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 25,
										Line:   111,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   111,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 25,
											Line:   111,
										},
									},
								},
								Name: "float",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   111,
								},
								File:   "math.flux",
								Source: "y: float",
								Start: ast.Position{
									Column: 32,
									Line:   111,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   111,
									},
									File:   "math.flux",
									Source: "y",
									Start: ast.Position{
										Column: 32,
										Line:   111,
									},
								},
							},
							Name: "y",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   111,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 35,
										Line:   111,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 40,
											Line:   111,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 35,
											Line:   111,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 50,
									Line:   111,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 45,
									Line:   111,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 50,
										Line:   111,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 45,
										Line:   111,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   112,
					},
					File:   "math.flux",
					Source: "builtin round",
					Start: ast.Position{
						Column: 1,
						Line:   112,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   112,
						},
						File:   "math.flux",
						Source: "round",
						Start: ast.Position{
							Column: 9,
							Line:   112,
						},
					},
				},
				Name: "round",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   112,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   112,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   112,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   112,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   112,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   112,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   112,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   112,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   112,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   112,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   112,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   112,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   112,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   112,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   112,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   112,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   113,
					},
					File:   "math.flux",
					Source: "builtin roundtoeven",
					Start: ast.Position{
						Column: 1,
						Line:   113,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   113,
						},
						File:   "math.flux",
						Source: "roundtoeven",
						Start: ast.Position{
							Column: 9,
							Line:   113,
						},
					},
				},
				Name: "roundtoeven",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   113,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 23,
							Line:   113,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   113,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 23,
								Line:   113,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   113,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 24,
									Line:   113,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   113,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 24,
										Line:   113,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 32,
										Line:   113,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 27,
										Line:   113,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 32,
											Line:   113,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 27,
											Line:   113,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   113,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 37,
									Line:   113,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   113,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 37,
										Line:   113,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   114,
					},
					File:   "math.flux",
					Source: "builtin signbit",
					Start: ast.Position{
						Column: 1,
						Line:   114,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   114,
						},
						File:   "math.flux",
						Source: "signbit",
						Start: ast.Position{
							Column: 9,
							Line:   114,
						},
					},
				},
				Name: "signbit",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 37,
							Line:   114,
						},
						File:   "math.flux",
						Source: "(x: float) => bool",
						Start: ast.Position{
							Column: 19,
							Line:   114,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   114,
							},
							File:   "math.flux",
							Source: "(x: float) => bool",
							Start: ast.Position{
								Column: 19,
								Line:   114,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   114,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 20,
									Line:   114,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   114,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 20,
										Line:   114,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   114,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 23,
										Line:   114,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   114,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 23,
											Line:   114,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   114,
								},
								File:   "math.flux",
								Source: "bool",
								Start: ast.Position{
									Column: 33,
									Line:   114,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 37,
										Line:   114,
									},
									File:   "math.flux",
									Source: "bool",
									Start: ast.Position{
										Column: 33,
										Line:   114,
									},
								},
							},
							Name: "bool",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   115,
					},
					File:   "math.flux",
					Source: "builtin sin",
					Start: ast.Position{
						Column: 1,
						Line:   115,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   115,
						},
						File:   "math.flux",
						Source: "sin",
						Start: ast.Position{
							Column: 9,
							Line:   115,
						},
					},
				},
				Name: "sin",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   115,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   115,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   115,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   115,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   115,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   115,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   115,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   115,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   115,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   115,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   115,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   115,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   115,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   115,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   115,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   115,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   116,
					},
					File:   "math.flux",
					Source: "builtin sincos",
					Start: ast.Position{
						Column: 1,
						Line:   116,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   116,
						},
						File:   "math.flux",
						Source: "sincos",
						Start: ast.Position{
							Column: 9,
							Line:   116,
						},
					},
				},
				Name: "sincos",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 56,
							Line:   116,
						},
						File:   "math.flux",
						Source: "(x: float) => {sin: float, cos: float}",
						Start: ast.Position{
							Column: 18,
							Line:   116,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 56,
								Line:   116,
							},
							File:   "math.flux",
							Source: "(x: float) => {sin: float, cos: float}",
							Start: ast.Position{
								Column: 18,
								Line:   116,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   116,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 19,
									Line:   116,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   116,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 19,
										Line:   116,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   116,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 22,
										Line:   116,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   116,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 22,
											Line:   116,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.RecordType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 56,
									Line:   116,
								},
								File:   "math.flux",
								Source: "{sin: float, cos: float}",
								Start: ast.Position{
									Column: 32,
									Line:   116,
								},
							},
						},
						Properties: []*ast.PropertyType{&ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   116,
									},
									File:   "math.flux",
									Source: "sin: float",
									Start: ast.Position{
										Column: 33,
										Line:   116,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 36,
											Line:   116,
										},
										File:   "math.flux",
										Source: "sin",
										Start: ast.Position{
											Column: 33,
											Line:   116,
										},
									},
								},
								Name: "sin",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   116,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 38,
											Line:   116,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   116,
											},
											File:   "math.flux",
											Source: "float",
											Start: ast.Position{
												Column: 38,
												Line:   116,
											},
										},
									},
									Name: "float",
								},
							},
						}, &ast.PropertyType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   116,
									},
									File:   "math.flux",
									Source: "cos: float",
									Start: ast.Position{
										Column: 45,
										Line:   116,
									},
								},
							},
							Name: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   116,
										},
										File:   "math.flux",
										Source: "cos",
										Start: ast.Position{
											Column: 45,
											Line:   116,
										},
									},
								},
								Name: "cos",
							},
							Ty: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 55,
											Line:   116,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 50,
											Line:   116,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 55,
												Line:   116,
											},
											File:   "math.flux",
											Source: "float",
											Start: ast.Position{
												Column: 50,
												Line:   116,
											},
										},
									},
									Name: "float",
								},
							},
						}},
						Tvar: nil,
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   117,
					},
					File:   "math.flux",
					Source: "builtin sinh",
					Start: ast.Position{
						Column: 1,
						Line:   117,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   117,
						},
						File:   "math.flux",
						Source: "sinh",
						Start: ast.Position{
							Column: 9,
							Line:   117,
						},
					},
				},
				Name: "sinh",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   117,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   117,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   117,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   117,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   117,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   117,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   117,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   117,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   117,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   117,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   117,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   117,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   117,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   117,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   117,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   117,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   118,
					},
					File:   "math.flux",
					Source: "builtin sqrt",
					Start: ast.Position{
						Column: 1,
						Line:   118,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   118,
						},
						File:   "math.flux",
						Source: "sqrt",
						Start: ast.Position{
							Column: 9,
							Line:   118,
						},
					},
				},
				Name: "sqrt",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   118,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   118,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   118,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   118,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   118,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   118,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   118,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   118,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   118,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   118,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   118,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   118,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   118,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   118,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   118,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   118,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   119,
					},
					File:   "math.flux",
					Source: "builtin tan",
					Start: ast.Position{
						Column: 1,
						Line:   119,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   119,
						},
						File:   "math.flux",
						Source: "tan",
						Start: ast.Position{
							Column: 9,
							Line:   119,
						},
					},
				},
				Name: "tan",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 34,
							Line:   119,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 15,
							Line:   119,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   119,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 15,
								Line:   119,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   119,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 16,
									Line:   119,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   119,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 16,
										Line:   119,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   119,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 19,
										Line:   119,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   119,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 19,
											Line:   119,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   119,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 29,
									Line:   119,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   119,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 29,
										Line:   119,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   120,
					},
					File:   "math.flux",
					Source: "builtin tanh",
					Start: ast.Position{
						Column: 1,
						Line:   120,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   120,
						},
						File:   "math.flux",
						Source: "tanh",
						Start: ast.Position{
							Column: 9,
							Line:   120,
						},
					},
				},
				Name: "tanh",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   120,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 16,
							Line:   120,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   120,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 16,
								Line:   120,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   120,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 17,
									Line:   120,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   120,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 17,
										Line:   120,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   120,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 20,
										Line:   120,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   120,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 20,
											Line:   120,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   120,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 30,
									Line:   120,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   120,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 30,
										Line:   120,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   121,
					},
					File:   "math.flux",
					Source: "builtin trunc",
					Start: ast.Position{
						Column: 1,
						Line:   121,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   121,
						},
						File:   "math.flux",
						Source: "trunc",
						Start: ast.Position{
							Column: 9,
							Line:   121,
						},
					},
				},
				Name: "trunc",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   121,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 17,
							Line:   121,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   121,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 17,
								Line:   121,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   121,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 18,
									Line:   121,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   121,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 18,
										Line:   121,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   121,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 21,
										Line:   121,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   121,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 21,
											Line:   121,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   121,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 31,
									Line:   121,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   121,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 31,
										Line:   121,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   122,
					},
					File:   "math.flux",
					Source: "builtin y0",
					Start: ast.Position{
						Column: 1,
						Line:   122,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   122,
						},
						File:   "math.flux",
						Source: "y0",
						Start: ast.Position{
							Column: 9,
							Line:   122,
						},
					},
				},
				Name: "y0",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 33,
							Line:   122,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 14,
							Line:   122,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 33,
								Line:   122,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 14,
								Line:   122,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   122,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 15,
									Line:   122,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   122,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 15,
										Line:   122,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   122,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 18,
										Line:   122,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   122,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 18,
											Line:   122,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 33,
									Line:   122,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 28,
									Line:   122,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   122,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 28,
										Line:   122,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   123,
					},
					File:   "math.flux",
					Source: "builtin y1",
					Start: ast.Position{
						Column: 1,
						Line:   123,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   123,
						},
						File:   "math.flux",
						Source: "y1",
						Start: ast.Position{
							Column: 9,
							Line:   123,
						},
					},
				},
				Name: "y1",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 33,
							Line:   123,
						},
						File:   "math.flux",
						Source: "(x: float) => float",
						Start: ast.Position{
							Column: 14,
							Line:   123,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 33,
								Line:   123,
							},
							File:   "math.flux",
							Source: "(x: float) => float",
							Start: ast.Position{
								Column: 14,
								Line:   123,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   123,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 15,
									Line:   123,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   123,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 15,
										Line:   123,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   123,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 18,
										Line:   123,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   123,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 18,
											Line:   123,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 33,
									Line:   123,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 28,
									Line:   123,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   123,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 28,
										Line:   123,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   124,
					},
					File:   "math.flux",
					Source: "builtin yn",
					Start: ast.Position{
						Column: 1,
						Line:   124,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   124,
						},
						File:   "math.flux",
						Source: "yn",
						Start: ast.Position{
							Column: 9,
							Line:   124,
						},
					},
				},
				Name: "yn",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   124,
						},
						File:   "math.flux",
						Source: "(n: int, x: float) => float",
						Start: ast.Position{
							Column: 14,
							Line:   124,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 41,
								Line:   124,
							},
							File:   "math.flux",
							Source: "(n: int, x: float) => float",
							Start: ast.Position{
								Column: 14,
								Line:   124,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   124,
								},
								File:   "math.flux",
								Source: "n: int",
								Start: ast.Position{
									Column: 15,
									Line:   124,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   124,
									},
									File:   "math.flux",
									Source: "n",
									Start: ast.Position{
										Column: 15,
										Line:   124,
									},
								},
							},
							Name: "n",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   124,
									},
									File:   "math.flux",
									Source: "int",
									Start: ast.Position{
										Column: 18,
										Line:   124,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   124,
										},
										File:   "math.flux",
										Source: "int",
										Start: ast.Position{
											Column: 18,
											Line:   124,
										},
									},
								},
								Name: "int",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   124,
								},
								File:   "math.flux",
								Source: "x: float",
								Start: ast.Position{
									Column: 23,
									Line:   124,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   124,
									},
									File:   "math.flux",
									Source: "x",
									Start: ast.Position{
										Column: 23,
										Line:   124,
									},
								},
							},
							Name: "x",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   124,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 26,
										Line:   124,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   124,
										},
										File:   "math.flux",
										Source: "float",
										Start: ast.Position{
											Column: 26,
											Line:   124,
										},
									},
								},
								Name: "float",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   124,
								},
								File:   "math.flux",
								Source: "float",
								Start: ast.Position{
									Column: 36,
									Line:   124,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   124,
									},
									File:   "math.flux",
									Source: "float",
									Start: ast.Position{
										Column: 36,
										Line:   124,
									},
								},
							},
							Name: "float",
						},
					},
				},
			},
		}},
		Eof:      nil,
		Imports:  nil,
		Metadata: "parser-type=rust",
		Name:     "math.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// \"math\"\n"}, ast.Comment{Text: "//\n"}, ast.Comment{Text: "// The Flux math package provides basic constants and mathematical functions.\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   4,
					},
					File:   "math.flux",
					Source: "package math",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   4,
						},
						File:   "math.flux",
						Source: "math",
						Start: ast.Position{
							Column: 9,
							Line:   4,
						},
					},
				},
				Name: "math",
			},
		},
	}},
	Package: "math",
	Path:    "math",
}
